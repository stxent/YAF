when:
  - event: [push, manual]

clone:
  git:
    image: ${DOCKER_PREFIX}/network-utils
    pull: true
    commands:
      - git clone ${CI_REPO_CLONE_URL} project
      - cd project
      - git checkout ${CI_COMMIT_SHA}
      - git submodule update --init --recursive
      - mkdir libs
      - smbclient "//$${DEPLOY_SERVER_ENV}" -U "$${DEPLOY_USER_NAME_ENV}%$${DEPLOY_USER_PASSWORD_ENV}" -c "cd xcore/master/latest; get libxcore.tar.xz"
      - tar -xJ -f libxcore.tar.xz -C libs
      - export REPO_REVISION=`git rev-list HEAD --count`
      - echo "ARTIFACT_PREFIX=${CI_REPO_NAME}_r$${REPO_REVISION}-${CI_COMMIT_SHA:0:8}_b${CI_PIPELINE_NUMBER}" >> envvars
      - echo "ARTIFACT_LIBRARY=lib${CI_REPO_NAME}" >> envvars
    environment:
      DEPLOY_SERVER_ENV:
        from_secret: DEPLOY_SERVER
      DEPLOY_USER_NAME_ENV:
        from_secret: DEPLOY_USER_NAME
      DEPLOY_USER_PASSWORD_ENV:
        from_secret: DEPLOY_USER_PASSWORD

steps:
  build:
    image: ${DOCKER_PREFIX}/gcc-desktop
    pull: true
    commands:
      - cd project
      - mkdir artifacts
      - cmake . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=libs -DCMAKE_INSTALL_PREFIX=artifacts -DBUILD_TESTING=ON
      - make -C build -j `nproc`
      - make -C build install

  test:
    image: ${DOCKER_PREFIX}/gcc-testing
    pull: true
    commands:
      - cd project
      - ctest --test-dir build --rerun-failed --output-on-failure
      - lcov -c -d . -o lcov.info --keep-going --no-external --ignore-errors inconsistent,inconsistent
      - genhtml --output-directory coverage --num-spaces 2 --sort --function-coverage --branch-coverage --legend lcov.info

  deploy:
    image: ${DOCKER_PREFIX}/network-utils
    pull: true
    commands:
      - cd project
      - source ./envvars
      - mkdir deploy latest
      - tar -cJ -f latest/$${ARTIFACT_LIBRARY}.tar.xz -C artifacts .
      - cp latest/$${ARTIFACT_LIBRARY}.tar.xz deploy/$${ARTIFACT_PREFIX}.tar.xz
      - tar -cJ -f deploy/$${ARTIFACT_PREFIX}_cov.tar.xz coverage
      - cd deploy
      - smbclient "//$${DEPLOY_SERVER_ENV}" -U "$${DEPLOY_USER_NAME_ENV}%$${DEPLOY_USER_PASSWORD_ENV}" -c "mkdir ${CI_REPO_NAME}" || true
      - smbclient "//$${DEPLOY_SERVER_ENV}" -U "$${DEPLOY_USER_NAME_ENV}%$${DEPLOY_USER_PASSWORD_ENV}" -c "cd ${CI_REPO_NAME}; mkdir ${CI_COMMIT_BRANCH}" || true
      - smbclient "//$${DEPLOY_SERVER_ENV}" -U "$${DEPLOY_USER_NAME_ENV}%$${DEPLOY_USER_PASSWORD_ENV}" -c "cd ${CI_REPO_NAME}/${CI_COMMIT_BRANCH}; prompt; mput *"
      - cd ../latest
      - smbclient "//$${DEPLOY_SERVER_ENV}" -U "$${DEPLOY_USER_NAME_ENV}%$${DEPLOY_USER_PASSWORD_ENV}" -c "cd ${CI_REPO_NAME}/${CI_COMMIT_BRANCH}; mkdir latest" || true
      - smbclient "//$${DEPLOY_SERVER_ENV}" -U "$${DEPLOY_USER_NAME_ENV}%$${DEPLOY_USER_PASSWORD_ENV}" -c "cd ${CI_REPO_NAME}/${CI_COMMIT_BRANCH}/latest; rm $${ARTIFACT_LIBRARY}.tar.xz" || true
      - smbclient "//$${DEPLOY_SERVER_ENV}" -U "$${DEPLOY_USER_NAME_ENV}%$${DEPLOY_USER_PASSWORD_ENV}" -c "cd ${CI_REPO_NAME}/${CI_COMMIT_BRANCH}/latest; prompt; mput *"
    environment:
      DEPLOY_SERVER_ENV:
        from_secret: DEPLOY_SERVER
      DEPLOY_USER_NAME_ENV:
        from_secret: DEPLOY_USER_NAME
      DEPLOY_USER_PASSWORD_ENV:
        from_secret: DEPLOY_USER_PASSWORD
